{
	"info": {
		"_postman_id": "622fc67f-94d2-4b12-b1f0-d2ffe9bc5576",
		"name": "GFLAPITest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Tests",
			"item": [
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcc1f4d9-5edf-4c7a-9125-68abda1172fd",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should be okay\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.expect(jsonData.message).to.eql(\"user created\");\r",
									"    pm.expect(jsonData).to.have.property(\"userId\");\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"mytestpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": [
						{
							"name": "User successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"user created\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"schema type not provided\""
						},
						{
							"name": "User email already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"message\": \"unable to create user as email already exists\"\n}"
						}
					]
				},
				{
					"name": "Create new user with same email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9923a7b-b0d7-449d-b3ea-d45422c3801e",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should return 409 conflict\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.jsonBody(\"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"mytestpassword2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"signup"
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"schema type not provided\""
						},
						{
							"name": "User email already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"message\": \"unable to create user as email already exists\"\n}"
						},
						{
							"name": "User successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"user created\"\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "832b8f4e-0766-4540-9bd5-1f8b176192ba",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.jwt_token);\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should be okay\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.expect(jsonData.message).to.eql(\"authentication successful\");\r",
									"    pm.expect(jsonData).to.have.property(\"jwt_token\");\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"mytestpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"schema type not provided\""
						},
						{
							"name": "User successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"user created\"\n}"
						},
						{
							"name": "User email already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"message\": \"unable to create user as email already exists\"\n}"
						}
					]
				},
				{
					"name": "Delete new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af7adcb5-92ad-4983-864a-2887933f654d",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should be okay\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer wYuHX2W3JkMJ0UrHE92KrB3drtHSUiKg64MRWyKvJl2x5j2xiU7xjYBBi6j2cT78",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": [
						{
							"name": "User successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"user created\"\n}"
						},
						{
							"name": "User email already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"message\": \"unable to create user as email already exists\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"schema type not provided\""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://localhost:3000/v1/api",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}